syntax = "proto3";

package api;

service Manager {
    rpc ReportState (StateRequest) returns (StateResponse) {}
    rpc NextExecution (NextExecutionRequest) returns (NextExecutionResponse) {}
    rpc ReportExecutionResult (ReportExecutionRequest) returns (ReportExecutionResponse) {}
}

message StateRequest {
    message ClusterNode {
        string nodeID = 1;
        string addr = 2;
        string flags = 3;
        string role = 4;
        bool myself = 5;
        string masterID = 6;
        int64 pingSent = 7;
        int64 pingRecv = 8;
        int64 configEpoch = 9;
        string linkStatus = 10;
        repeated string slots = 11;
    }

    message HostAnnotation {
        string name = 1;
        string value = 2;
    }

    message NodeMetric {
        string name = 1;
        double value = 2;
    }

    bool isEmpty = 1;
    repeated ClusterNode nodes = 2;
    repeated HostAnnotation hostAnnotations = 3;
    repeated NodeMetric metrics = 4;
    string addr = 5;
}

message StateResponse {}

message NextExecutionRequest {
    string nodeID = 1;
}

message NextExecutionResponse {
    message ExecutionCommand {
        string id = 1;
        int64 command = 2;
        repeated string arguments = 3;
    }

    repeated ExecutionCommand commands = 1;
}

message ReportExecutionRequest {
    message ExecutionResult {
        string id = 1;
        repeated string result = 2;
        bool success = 3;
    }

    string nodeID = 1;
    repeated ExecutionResult commandResults = 2;
}

message ReportExecutionResponse {}
